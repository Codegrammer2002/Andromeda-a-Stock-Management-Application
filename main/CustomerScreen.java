/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package business_application_ia;

/**
 *
 * @author Parv
 */
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.*; 
import javax.swing.*;
import net.proteanit.sql.DbUtils; 


public class CustomerScreen extends javax.swing.JFrame {
    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement ps = null;
        String search = "CustomerName";
    /**
     * Creates new form CustomerScreen
     */
    public CustomerScreen() {
        initComponents();
         conn = JavaConnect.ConnecrDb();
         Update_table();
         Toolkit tk = getToolkit();
         Dimension size = tk.getScreenSize();
         setLocation(size.width/2- getWidth()/2, size.height/2 - getHeight()/2);
         
    }
    private void Clear_Screen(){
    idF.setText("");
    NameF.setText("");
    EmailF.setText("");
    MobileF.setText("");
    AddressF.setText("");
    
    }
    private void Update_table(){
    try{
    String sql = "Select * from CustomerInfo";
    ps = conn.prepareStatement(sql);
    rs = ps.executeQuery();
    Table_Customer.setModel(DbUtils.resultSetToTableModel(rs));
    
    }
    
    catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
    }
    
 finally {
try{
  rs.close();
      ps.close();
    
  }
  catch(Exception e) {
                   }
      }
    }
    private void searchCustomer(){
     try{
        String sql = "select * from CustomerInfo where CustomerId = ?";
        ps = conn.prepareStatement(sql);
        ps.setString(1,  searchF.getText());
        rs = ps.executeQuery();
        if(rs.next()){
         String addID = rs.getString("CustomerId");
            idF.setText(addID);
                
           String addName = rs.getString("CustomerName");
           NameF.setText(addName);
           
              String addEmail = rs.getString("CustomerEmail");
            EmailF.setText(addEmail);
            
            String addMobile = rs.getString("CustomerMobile");
            MobileF.setText(addMobile);
             
            String addAddress = rs.getString("CustomerAddress");
           AddressF.setText(addAddress);
        }
        } 
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
         finally {
                try{
                    rs.close();
                    ps.close();
    
                    }
                catch(Exception e) {
                   }
      }
      try{
        String sql = "select * from CustomerInfo where CustomerName = ?";
        ps = conn.prepareStatement(sql);
        ps.setString(1,  searchF.getText());
        rs = ps.executeQuery();
        if(rs.next()){
         String addID = rs.getString("CustomerId");
            idF.setText(addID);
                
           String addName = rs.getString("CustomerName");
           NameF.setText(addName);
           
              String addEmail = rs.getString("CustomerEmail");
            EmailF.setText(addEmail);
            
            String addMobile = rs.getString("CustomerMobile");
            MobileF.setText(addMobile);
             
            String addAddress = rs.getString("CustomerAddress");
           AddressF.setText(addAddress);
        }
        } 
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
         finally {
                try{
                    rs.close();
                    ps.close();
    
                    }
                catch(Exception e) {
                   }
      }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Table_Customer = new javax.swing.JTable();
        Addbtn = new javax.swing.JToggleButton();
        Editbtn = new javax.swing.JButton();
        Deletebtn = new javax.swing.JButton();
        idF = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        NameF = new javax.swing.JTextField();
        EmailF = new javax.swing.JTextField();
        MobileF = new javax.swing.JTextField();
        AddressF = new javax.swing.JTextField();
        Backbtn = new javax.swing.JButton();
        Clearbtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        searchF = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Table_Customer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table_Customer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table_CustomerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Table_Customer);

        Addbtn.setText("Add Customer");
        Addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddbtnActionPerformed(evt);
            }
        });

        Editbtn.setText("Edit Customer");
        Editbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditbtnActionPerformed(evt);
            }
        });

        Deletebtn.setText("Delete Customer");
        Deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletebtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Customer ID");

        jLabel2.setText("Customer Name");

        jLabel3.setText("Customer Email");

        jLabel4.setText("Customer Mobile no.");

        jLabel5.setText("Customer Address");

        EmailF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailFActionPerformed(evt);
            }
        });

        MobileF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MobileFActionPerformed(evt);
            }
        });

        Backbtn.setText("Back");
        Backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackbtnActionPerformed(evt);
            }
        });

        Clearbtn.setText("Clear ");
        Clearbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearbtnActionPerformed(evt);
            }
        });

        jLabel6.setText("Search bar");

        searchF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFActionPerformed(evt);
            }
        });
        searchF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchFKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Addbtn)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(idF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                                        .addComponent(NameF, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(EmailF, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Editbtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(Deletebtn)
                                        .addGap(29, 29, 29)
                                        .addComponent(Clearbtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(Backbtn))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(MobileF))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(18, 18, 18)
                                        .addComponent(AddressF, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(28, 28, 28))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(175, 175, 175)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(searchF, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 859, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NameF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(EmailF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(searchF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(MobileF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(AddressF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Addbtn)
                    .addComponent(Editbtn)
                    .addComponent(Deletebtn)
                    .addComponent(Backbtn)
                    .addComponent(Clearbtn))
                .addGap(54, 54, 54))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EditbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditbtnActionPerformed
        // TODO add your handling code here:
        try{
       
       String CustomerID = idF.getText();
       String Namev = NameF.getText();
       String Emailv = EmailF.getText();
       String  Mobilev  = MobileF.getText();
       String Addressv = AddressF.getText();
       
       String sql = "update CustomerInfo set CustomerId= '"+CustomerID+"' , CustomerName ='"+Namev+"', CustomerEmail = '"+Emailv+"', CustomerMobile ='"+Mobilev+"', CustomerAddress ='"+Addressv+"' where CustomerId= '"+CustomerID+"'  ";
       ps = conn.prepareStatement(sql);
       
       ps.execute();
       JOptionPane.showMessageDialog(null, "Table has been sucessfully updated!");
       Clear_Screen();
       
       Update_table();
       
        
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
        }
        finally {
            try{
                rs.close();
                ps.close();
    
              }
            catch(Exception e) {
                   }
      } 
    }//GEN-LAST:event_EditbtnActionPerformed

    private void MobileFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MobileFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MobileFActionPerformed

    private void EmailFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmailFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmailFActionPerformed

    private void BackbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackbtnActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        MainScreen ms = new MainScreen();
        ms.setVisible(true);
    }//GEN-LAST:event_BackbtnActionPerformed

    private void AddbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddbtnActionPerformed
        // TODO add your handling code here:
        try{
            String sql = "Insert into CustomerInfo(CustomerId, CustomerName, CustomerEmail,CustomerMobile,CustomerAddress) values (?,?,?,?,?) ";
            ps = conn.prepareStatement(sql);
            ps.setString(1, idF.getText());
            
            ps.setString(2, NameF.getText());
            ps.setString(3, EmailF.getText());
            ps.setString(4, MobileF.getText());
            ps.setString(5, AddressF.getText());
            
            ps.execute();
            JOptionPane.showMessageDialog(null, "Data saved!");
        
        }
        catch(Exception e){
            
                        JOptionPane.showMessageDialog(null, e);

        }
        finally {
            try{
                rs.close();
                ps.close();
    
              }
            catch(Exception e) {
                   }
      } 
        Update_table();
               Clear_Screen();

       

    }//GEN-LAST:event_AddbtnActionPerformed

    private void Table_CustomerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Table_CustomerMouseClicked
        // TODO add your handling code here:
        try{
            //JOptionPane.showMessageDialog(null, "Working");
            int row = Table_Customer.getSelectedRow();
            String Table_click = (Table_Customer.getModel().getValueAt(row, 0).toString());
            String sql = "Select * from CustomerInfo where CustomerId =' "+Table_click+ "' ";
             ps = conn.prepareStatement(sql);
            rs = ps.executeQuery();
            if(rs.next()){
            String addID = rs.getString("CustomerId");
            idF.setText(addID);
                
           String addName = rs.getString("CustomerName");
           NameF.setText(addName);
           
              String addEmail = rs.getString("CustomerEmail");
            EmailF.setText(addEmail);
            
            String addMobile = rs.getString("CustomerMobile");
            MobileF.setText(addMobile);
             
            String addAddress = rs.getString("CustomerAddress");
           AddressF.setText(addAddress);
            
          
            
            }
        
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        
        
 finally {
try{
  rs.close();
      ps.close();
    
  }
  catch(Exception e) {
                   }
      }
    }//GEN-LAST:event_Table_CustomerMouseClicked

    private void DeletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletebtnActionPerformed
        // TODO add your handling code here:
              int boolvar =  JOptionPane.showConfirmDialog(null, "Confirm deletion. " , "Deletion",JOptionPane.YES_NO_OPTION);
              if(boolvar == 0){
           String sql = "delete from CustomerInfo where CustomerId = ?";

        try{
            ps  =conn.prepareStatement(sql);
            ps.setString(1,idF.getText());
                    
            ps.execute();
            JOptionPane.showMessageDialog(null, "Succesfully deleted");
            
            
        }
        catch(Exception e){
            
            
        
        }
        finally {
            try{
                rs.close();
                ps.close();
    
              }
            catch(Exception e) {
                   }
      } 
        Update_table();
        Clear_Screen();

    }//GEN-LAST:event_DeletebtnActionPerformed
              else{ JOptionPane.showMessageDialog(null, "Deletion cancelled");}
    }
    
    private void ClearbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearbtnActionPerformed
        // TODO add your handling code here:
        Clear_Screen();
                
    }//GEN-LAST:event_ClearbtnActionPerformed

    private void searchFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFActionPerformed

    private void searchFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFKeyReleased
        // TODO add your handling code here:

        searchCustomer();
    }//GEN-LAST:event_searchFKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton Addbtn;
    private javax.swing.JTextField AddressF;
    private javax.swing.JButton Backbtn;
    private javax.swing.JButton Clearbtn;
    private javax.swing.JButton Deletebtn;
    private javax.swing.JButton Editbtn;
    private javax.swing.JTextField EmailF;
    private javax.swing.JTextField MobileF;
    private javax.swing.JTextField NameF;
    private javax.swing.JTable Table_Customer;
    private javax.swing.JTextField idF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField searchF;
    // End of variables declaration//GEN-END:variables
}
