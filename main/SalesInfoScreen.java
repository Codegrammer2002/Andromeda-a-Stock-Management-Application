/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package business_application_ia;

/**
 *
 * @author Parv
 */
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.*;
import javax.swing.*;
import net.proteanit.sql.DbUtils;
public class SalesInfoScreen extends javax.swing.JFrame {
 Connection conn = null;
    ResultSet rs = null;
    PreparedStatement ps = null;
    /** Creates new form SalesInfoScreen */
    public SalesInfoScreen() {
        initComponents();
        conn = JavaConnect.ConnecrDb();
         Update_table();
         Toolkit tk = getToolkit();
         Dimension size = tk.getScreenSize();
         setLocation(size.width/2- getWidth()/2, size.height/2 - getHeight()/2);
         
    }
    private void Update_table(){
    try{
    String sql = "Select * from SalesInfo";
    ps = conn.prepareStatement(sql);
    rs = ps.executeQuery();
    Table_Sales.setModel(DbUtils.resultSetToTableModel(rs));
    
    }
    
    catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
    }
    
 finally {
try{
  rs.close();
      ps.close();
    
  }
  catch(Exception e) {
                   }
      }
    }
    private void Clear_Screen(){
    salesIDF.setText("");
    itemNameF.setText("");
    ItemPriceF.setText("");
    qtyF.setText("");
    totalPriceF.setText("");
    customerNameF.setText("");
    PSF.setText("");
    amountLeftF.setText("");
    dateF.setText("");
    }
      private void searchInSales(){
     try{
        String sql = "select * from SalesInfo where SalesID = ?";
        ps = conn.prepareStatement(sql);
        ps.setString(1,  searchF.getText());
        rs = ps.executeQuery();
        if(rs.next()){
         String addID = rs.getString("SalesID");
            salesIDF.setText(addID);
                
           String addName = rs.getString("ItemName");
           itemNameF.setText(addName);
           
              String addPrice = rs.getString("ItemPrice");
            ItemPriceF.setText(addPrice);
            
            String addqty = rs.getString("ItemQuantity");
            qtyF.setText(addqty);
             
            String addPriceT = rs.getString("TotalPrice");
           totalPriceF.setText(addPriceT);
           
            String cusname = rs.getString("CustomerName");
            customerNameF.setText(cusname);
            
            String paystat = rs.getString("PaymentStatus");
            PSF.setText(paystat);
            
            String amount = rs.getString("LeftAmount");
            amountLeftF.setText(amount);
            String date = rs.getString("Date");
            dateF.setText(date);
        }
        } 
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
         finally {
                try{
                    rs.close();
                    ps.close();
    
                    }
                catch(Exception e) {
                   }
      }
      try{
        String sql = "select * from SalesInfo where ItemName = ?";
        ps = conn.prepareStatement(sql);
        ps.setString(1,  searchF.getText());
        rs = ps.executeQuery();
        if(rs.next()){
         String addID = rs.getString("SalesID");
            salesIDF.setText(addID);
                
           String addName = rs.getString("ItemName");
           itemNameF.setText(addName);
           
              String addPrice = rs.getString("ItemPrice");
            ItemPriceF.setText(addPrice);
            
            String addqty = rs.getString("ItemQuantity");
            qtyF.setText(addqty);
             
            String addPriceT = rs.getString("TotalPrice");
           totalPriceF.setText(addPriceT);
           
            String cusname = rs.getString("CustomerName");
            customerNameF.setText(cusname);
            
            String paystat = rs.getString("PaymentStatus");
            PSF.setText(paystat);
            
            String amount = rs.getString("LeftAmount");
            amountLeftF.setText(amount);
            String date = rs.getString("Date");
            dateF.setText(date);
        }
        } 
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
         finally {
                try{
                    rs.close();
                    ps.close();
    
                    }
                catch(Exception e) {
                   }
      }
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel13 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table_Sales = new javax.swing.JTable();
        backbtn = new javax.swing.JButton();
        Addbtn = new javax.swing.JButton();
        editbtn = new javax.swing.JButton();
        deletebtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        salesIDF = new javax.swing.JTextField();
        itemNameF = new javax.swing.JTextField();
        ItemPriceF = new javax.swing.JTextField();
        qtyF = new javax.swing.JTextField();
        totalPriceF = new javax.swing.JTextField();
        customerNameF = new javax.swing.JTextField();
        PSF = new javax.swing.JTextField();
        amountLeftF = new javax.swing.JTextField();
        clearbtn = new javax.swing.JButton();
        Incompletebtn = new javax.swing.JButton();
        Fitlerbtn = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        dateF = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        searchF = new javax.swing.JTextField();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jLabel14 = new javax.swing.JLabel();

        jLabel13.setText("jLabel13");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Table_Sales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table_Sales.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table_SalesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Table_Sales);

        backbtn.setText("Back");
        backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtnActionPerformed(evt);
            }
        });

        Addbtn.setText("Add ");
        Addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddbtnActionPerformed(evt);
            }
        });

        editbtn.setText("Edit ");
        editbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editbtnActionPerformed(evt);
            }
        });

        deletebtn.setText("Delete");
        deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnActionPerformed(evt);
            }
        });

        jLabel1.setText("SalesID");

        jLabel2.setText("Item Price");

        jLabel3.setText("Item Quantity ");

        jLabel4.setText("Total Price");

        jLabel5.setText("Customer Name");

        jLabel6.setText("Item Name");

        jLabel7.setText("Payment Status");

        jLabel8.setText("Amount Left");

        salesIDF.setText("      ");
        salesIDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salesIDFActionPerformed(evt);
            }
        });

        itemNameF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemNameFActionPerformed(evt);
            }
        });

        ItemPriceF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemPriceFActionPerformed(evt);
            }
        });

        qtyF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyFActionPerformed(evt);
            }
        });

        clearbtn.setText("Clear");
        clearbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearbtnActionPerformed(evt);
            }
        });

        Incompletebtn.setText("Filter IC");
        Incompletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IncompletebtnActionPerformed(evt);
            }
        });

        Fitlerbtn.setText("Filter C");
        Fitlerbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FitlerbtnActionPerformed(evt);
            }
        });

        jLabel11.setText("Date");

        jLabel12.setText("Search:");

        searchF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFActionPerformed(evt);
            }
        });
        searchF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchFKeyReleased(evt);
            }
        });

        jToggleButton1.setText("Filter Sales");

        jToggleButton2.setText("FIlter Customer");

        jLabel14.setText("Filters:  Incomplete     Complete               Sales                             Customer");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(salesIDF)))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(itemNameF))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ItemPriceF))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(qtyF))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(totalPriceF))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(customerNameF)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(PSF, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(amountLeftF))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateF, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(Addbtn)
                                .addGap(19, 19, 19)
                                .addComponent(editbtn)
                                .addGap(18, 18, 18)
                                .addComponent(deletebtn)
                                .addGap(18, 18, 18)
                                .addComponent(clearbtn))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addComponent(searchF, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(101, 101, 101)
                        .addComponent(Incompletebtn)
                        .addGap(18, 18, 18)
                        .addComponent(Fitlerbtn)
                        .addGap(18, 18, 18)
                        .addComponent(jToggleButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jToggleButton2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backbtn)
                .addGap(11, 11, 11))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salesIDF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemNameF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ItemPriceF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(qtyF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalPriceF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerNameF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PSF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(amountLeftF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(searchF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backbtn)
                    .addComponent(Addbtn)
                    .addComponent(editbtn)
                    .addComponent(deletebtn)
                    .addComponent(clearbtn)
                    .addComponent(Incompletebtn)
                    .addComponent(Fitlerbtn)
                    .addComponent(jToggleButton1)
                    .addComponent(jToggleButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtnActionPerformed
        // TODO add your handling code here:
        int checkint = RevenueScreen.int_back_global;
        if(checkint !=1 ){
        MainScreen ms = new MainScreen();
        ms.setVisible(true);
        this.setVisible(false);}
        else{ RevenueScreen rs = new RevenueScreen(); rs.setVisible(true); this.setVisible(false);}
    }//GEN-LAST:event_backbtnActionPerformed

    private void salesIDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salesIDFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_salesIDFActionPerformed

    private void itemNameFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemNameFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemNameFActionPerformed

    private void ItemPriceFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemPriceFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ItemPriceFActionPerformed

    private void qtyFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qtyFActionPerformed

    private void AddbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddbtnActionPerformed
        // TODO add your handling code here:
          try{
            String sql = "Insert into SalesInfo(SalesID,ItemName, ItemPrice, ItemQuantity,TotalPrice,CustomerName,PaymentStatus,LeftAmount,Date) values (?,?,?,?,?,?,?,?,?) ";
            ps = conn.prepareStatement(sql);
            ps.setString(1, salesIDF.getText());
            
            ps.setString(2, itemNameF.getText());
            ps.setString(3, ItemPriceF.getText());
            ps.setString(4, qtyF.getText());
            ps.setString(5, totalPriceF.getText());
            ps.setString(6, customerNameF.getText());
            ps.setString(7, PSF.getText());
            ps.setString(8, amountLeftF.getText());
            ps.setString(9, dateF.getText());
                    ps.execute();
            JOptionPane.showMessageDialog(null, "Data saved!");
        
        }
        catch(Exception e){
            
                        JOptionPane.showMessageDialog(null, "Eroor: Sales ID must be unique.");

        }
        finally {
            try{
                rs.close();
                ps.close();
    
              }
            catch(Exception e) {
                   }
      } 
        Update_table();
               Clear_Screen();
    }//GEN-LAST:event_AddbtnActionPerformed

    private void Table_SalesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Table_SalesMouseClicked
        // TODO add your handling code here:
        try{
            //JOptionPane.showMessageDialog(null, "Working");
            int row = Table_Sales.getSelectedRow();
            String Table_click = (Table_Sales.getModel().getValueAt(row, 0).toString());
            String sql = "Select * from SalesInfo where SalesID =' "+Table_click+ "' ";
             ps = conn.prepareStatement(sql);
            rs = ps.executeQuery();
            if(rs.next()){
            String addID = rs.getString("SalesID");
            salesIDF.setText(addID);
                
           String addName = rs.getString("ItemName");
           itemNameF.setText(addName);
           
              String addPrice = rs.getString("ItemPrice");
            ItemPriceF.setText(addPrice);
            
            String addqty = rs.getString("ItemQuantity");
            qtyF.setText(addqty);
             
            String addPriceT = rs.getString("TotalPrice");
           totalPriceF.setText(addPriceT);
           
            String cusname = rs.getString("CustomerName");
            customerNameF.setText(cusname);
            
            String paystat = rs.getString("PaymentStatus");
            PSF.setText(paystat);
            
            String amount = rs.getString("LeftAmount");
            amountLeftF.setText(amount);
            String date = rs.getString("Date");
            dateF.setText(date);
          
            
            }
        
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        
        
 finally {
try{
  rs.close();
      ps.close();
    
  }
  catch(Exception e) {
                   }
      }
    }//GEN-LAST:event_Table_SalesMouseClicked

    private void clearbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearbtnActionPerformed
        // TODO add your handling code here:
        Clear_Screen();
    }//GEN-LAST:event_clearbtnActionPerformed

    private void deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnActionPerformed
        // TODO add your handling code here:
        int boolvar =  JOptionPane.showConfirmDialog(null, "Confirm deletion. " , "Deletion",JOptionPane.YES_NO_OPTION);
              if(boolvar == 0){
           String sql = "delete from SalesInfo where SalesID = ?";

        try{
            ps  =conn.prepareStatement(sql);
            ps.setString(1,salesIDF.getText());
                    
            ps.execute();
            JOptionPane.showMessageDialog(null, "Succesfully deleted");
            
            
        }
        catch(Exception e){
            
            
        
        }
        finally {
            try{
                rs.close();
                ps.close();
    
              }
            catch(Exception e) {
                   }
      } 
        Update_table();
        Clear_Screen();

    }                                         
              else{ JOptionPane.showMessageDialog(null, "Deletion cancelled");}
    }//GEN-LAST:event_deletebtnActionPerformed

    private void editbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editbtnActionPerformed
        // TODO add your handling code here:
         try{
       
       String SalesID = salesIDF.getText();
       String ItemNamev = itemNameF.getText();
       String ItemPricev = ItemPriceF.getText();
       String  Quantityv  = qtyF.getText();
       String TotalPricev = totalPriceF.getText();
       String cusnamev = customerNameF.getText();
       String statusv = PSF.getText();
       String amountleftv = amountLeftF.getText();
       String date = dateF.getText();
       
   //    String sql = "update SalesInfo set SalesID= '"+SalesID+"' , ItemName ='"+ItemNamev+"', ItemPrice = '"+ItemPricev+"', ItemQuantity ='"+Quantityv+"', TotalPrice ='"TotalPricev+"',CustomerName = '"+cusnamev+"', PaymentStatus= '"+statusv+"',LeftAmount = '"+amountleftv+"' where SalesID= '"+SalesID+"' ";
       String query = "update SalesInfo set SalesID= '"+SalesID+"' , ItemName ='"+ItemNamev+"', ItemPrice ='"+ItemPricev+"', ItemQuantity = '"+Quantityv+"', TotalPrice ='"+TotalPricev+"', CustomerName ='"+cusnamev+"',PaymentStatus= '"+statusv+"', LeftAmount = '"+amountleftv+"',Date = '"+date+"' where SalesID= '"+SalesID+"'  ";

       ps = conn.prepareStatement(query);
       
       ps.execute();
       JOptionPane.showMessageDialog(null, "Table has been successfully updated");
       Clear_Screen();
       
       Update_table();
       
        
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
        }
        finally {
            try{
                rs.close();
                ps.close();
    
              }
            catch(Exception e) {
                   }
      } 
    }//GEN-LAST:event_editbtnActionPerformed

    private void IncompletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IncompletebtnActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        InCompleteScreen ics = new InCompleteScreen();
        ics.setVisible(true);
        
        
    }//GEN-LAST:event_IncompletebtnActionPerformed

    private void FitlerbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FitlerbtnActionPerformed
        // TODO add your handling code here:
         this.setVisible(false);
        CompleteScreen cs = new CompleteScreen();
        cs.setVisible(true);
    }//GEN-LAST:event_FitlerbtnActionPerformed

    private void searchFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFActionPerformed

    private void searchFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFKeyReleased
        // TODO add your handling code here:
        searchInSales();
        
    }//GEN-LAST:event_searchFKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SalesInfoScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SalesInfoScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SalesInfoScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SalesInfoScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SalesInfoScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Addbtn;
    private javax.swing.JButton Fitlerbtn;
    private javax.swing.JButton Incompletebtn;
    private javax.swing.JTextField ItemPriceF;
    private javax.swing.JTextField PSF;
    private javax.swing.JTable Table_Sales;
    private javax.swing.JTextField amountLeftF;
    private javax.swing.JButton backbtn;
    private javax.swing.JButton clearbtn;
    private javax.swing.JTextField customerNameF;
    private javax.swing.JTextField dateF;
    private javax.swing.JButton deletebtn;
    private javax.swing.JButton editbtn;
    private javax.swing.JTextField itemNameF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JTextField qtyF;
    private javax.swing.JTextField salesIDF;
    private javax.swing.JTextField searchF;
    private javax.swing.JTextField totalPriceF;
    // End of variables declaration//GEN-END:variables

}
